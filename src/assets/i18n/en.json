{
  "app": {
    "loadingText": "Loading",
    "tagsText": "Popular Tags"
  },
  "banner": {
    "title": "Medium Clone",
    "subTitle": "A place to share knowledge"
  },
  "topbar": {
    "home": "Home",
    "newPost": "New Post",
    "settings": "Settings",
    "logOut": "Log out",
    "logIn": "Sign in",
    "register": "Sign up",
    "about": "About"
  },
  "sidebar": {
    "titles": {
      "articles": "Articles",
      "preferences": "Preferences",
      "user": "User"
    },
    "newPost": "New Post",
    "settings": "Settings",
    "logOut": "Log out",
    "logIn": "Sign in",
    "register": "Sign up",
    "lang": "Language",
    "theme": "Theme",
    "themes": {
      "light": "Light",
      "dark": "Dark"
    },
    "about": "About",
    "savePrefs": "Save Preferences"
  },
  "login": {
    "title": "Sign in",
    "link": "Don't have an account?",
    "inputs": {
      "emailPlaceholder": "Email",
      "passwordPlaceholder": "Password"
    },
    "buttons": {
      "submit": "Sign in"
    }
  },
  "register": {
    "title": "Sign up",
    "link": "Have an account?",
    "inputs": {
      "usernamePlaceholder": "Username",
      "emailPlaceholder": "Email",
      "passwordPlaceholder": "Password"
    },
    "buttons": {
      "submit": "Sign up"
    }
  },
  "feed": {
    "tabs": {
      "yours": "Your Feed",
      "global": "Global Feed"
    },
    "readMore": "Read more..."
  },
  "article": {
    "create": "Create Article",
    "edit": "Edit Article",
    "inputs": {
      "placeholders": {
        "title": "Title",
        "body": "Body",
        "description": "Description",
        "newTag": "New Tag"
      }
    },
    "tagsTitle": "Tags",
    "confirmationText": "Are you sure you want to delete this article?",
    "buttons": {
      "yes": "Yes",
      "no": "No",
      "edit": "Edit",
      "delete": "Delete",
      "submit": "Save",
      "addTag": "Add Tag"
    }
  },
  "comment": {
    "title": "Comment List",
    "noComments": "No comments have been made on this post yet.",
    "newComment": {
      "title": "New Comment",
      "placeholder": "Write your comment..."
    },
    "buttons": {
      "add": "Add Comment",
      "new": "New Comment",
      "delete": "Delete Comment",
      "confirm": "Confirm",
      "cancel": "Cancel",
      "post": "Post Comment"
    }
  },
  "profile": {
    "tabs": {
      "myPosts": "My Posts",
      "favPosts": "Favorited Posts"
    },
    "buttons": {
      "editProfile": "Edit Profile Settings"
    }
  },
  "settings": {
    "title": "Settings",
    "inputs": {
      "placeholders": {
        "url": "URL of profile picture",
        "username": "Username",
        "bio": "Biography about you",
        "email": "Email"
      }
    },
    "buttons": {
      "submit": "Save",
      "logOut": "Log out"
    }
  },
  "paginator": {
    "ofText": "of",
    "pagesText": "pages"
  },
  "footer": {
    "title": "Developed for showcase purposes only",
    "subTitle": "Lautaro Bernati @ 2024"
  },
  "about": {
    "title": "About this web app",
    "subtitle": "Who am I",
    "render": {
      "title": "Render Mechanism",
      "desc": "There are 3 types of render techniques in Angular, 2 of them are widely known.",
      "default": {
        "title": "Default (or CheckAlways)",
        "p1": "The default rendering mechanism of Angular utilizes Zone.js, a library for intercepting and tracking asynchronous operations in JavaScript. When Angular applications run, Zone.js patches various browser APIs to detect changes in the application state, such as changes to component properties or user interactions. When a change is detected, Angular re-renders affected components to reflect the updated state. This mechanism provides automatic change detection, where Angular updates the DOM in response to changes in the application state without requiring explicit instructions from developers. It simplifies development (though at the expense of performance) by automating many aspects of managing the application's state and user interface."
      },
      "onPush": {
        "title": "On Push Strategy",
        "p1": "This strategy tells Angular to update the DOM when:",
        "reasons": {
          "one": "The component's input properties change.",
          "two": "An event originated from the component or one of its children triggers change detection.",
          "three": "The component explicitly requests change detection using methods like markForCheck()."
        },
        "p2": "This can lead to significant performance improvements, especially in large applications with complex component trees, by reducing the number of unnecessary change detection cycles."
      },
      "zoneless": {
        "title": "Zoneless (this app)",
        "p1": "Zoneless mode in Angular refers to a rendering mechanism where developers disable the zone.js library, enabling manual control over change detection and asynchronous task management. In this mode, developers trigger change detection manually, handle asynchronous tasks explicitly, and aim for maximum performance by eliminating the overhead of zone.js. While zoneless mode offers flexibility and potential performance benefits, it requires careful consideration and implementation to manage complexity and ensure compatibility with Angular features and third-party libraries. For this purpose, ngrx/component library, with its Push Pipe and Let Directive was used to help with zoneless."
      }
    },
    "aboutApp": {
      "tools": "Tools",
      "desc1": "This application was built for showcase purposes. All data is deleted after 24 hours. It was developed using a special rendering mechanism called 'zoneless,' which eliminates the need for zone.js in Angular. The primary goal of disabling zone.js is to maximize Angular's performance and transform the app into an almost entirely declarative type of application.",
      "desc2": "For backend purposes, this project utilizes the Real World API provided by Bump.sh. All rights reserved to them."
    },
    "description": {
      "part1": "Hi, my name is Lautaro. I'm an accomplished web developer, with now more than ",
      "part2": " years of experience. My journey into web development began during my time in the military, where I spent a year and a half diving into full-stack development. After graduating in 2022 with a specialization in web development, I jumped into the corporate world at Coto CICSA. Here, I've honed my skills, specializing in front-end development and now serving as a Semi-Senior Developer. I'm the go-to person for key front-end concepts and ideas, and I love mentoring colleagues. Sometimes, I'm even asked to share my expertise in Angular through small lectures for other teams within my company."
    },
    "contact": "Contact"
  }
}